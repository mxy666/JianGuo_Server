#log4j.rootLogger=INFO,consoleAppender
#log4j.appender.logfile=org.apache.log4j.RollingFileAppender
#log4j.appender.consoleAppender=org.apache.log4j.ConsoleAppender
 #输出以上的INFO信息
#log4j.appender.logfile.Threshold=INFO 
#保存log文件路径     
#log4j.appender.logfile.File=/log/logInfo.log
 #默认为true，添加到末尾，false在每次启动时进行覆盖  
#log4j.appender.logfile.Append=true
#log4j.appender.logfile.layout=org.apache.log4j.PatternLayout 
#log4j.appender.logfile.layout.ConversionPattern=%d%p[%c]-%m%n%d
#一个log文件的大小，超过这个大小就又会生成1个日志 //KB ，MB，GB             
#log4j.appender.logfile.MaxFileSize=10KB 
#最多保存3个文件备份
#log4j.appender.logfile.MaxBackupIndex=3 
#log4j.appender.consoleAppender.Threshold=ERROR
#log4j.appender.consoleAppender.layout=org.apache.log4j.PatternLayout
#log4j.appender.consoleAppender.layout.ConversionPattern=%d%-5p%m%n
#直接输出，不进行缓存
#log4j.appender.consoleAppender.ImmediateFlush=true        
#log4j.appender.consoleAppender.Target=System.err 

#定义DEBUG优先级，R为日志输出目的的 
#log4j.rootLogger=INFO, R 
#设置日志输出类型,为文件类型 
#log4j.appender.R=org.apache.log4j.FileAppender 
#log4j.appender.consoleAppender=org.apache.log4j.ConsoleAppender
#设置日志文件名my.log 
#log4j.appender.R.file=my.log 
#每次在文件尾写入新的日志信息 
#log4j.appender.R.Append=true 
#日志输出信息格式类型 
#log4j.appender.R.layout=org.apache.log4j.PatternLayout 
#日志输出信息格式为 换行、换行、日期、优先级、[类名]、日志信息、换行 6
#log4j.appender.R.layout.ConversionPattern=%n%n%d%p[%c]-%m%n 


log4j.logger.log=Info,log
log4j.appender.log=org.apache.log4j.DailyRollingFileAppender  
log4j.appender.log.File=${catalina.home}/log/log.log
log4j.appender.log.DatePattern='.'yyyy-MM-dd
log4j.appender.log.Threshold =DEBUG
log4j.appender.log.layout=org.apache.log4j.PatternLayout  
log4j.appender.log.layout.ConversionPattern =%-d{yyyy-MM-dd HH\:mm\:ss}[%c] [%t\:%r] - [%p]  %m%n